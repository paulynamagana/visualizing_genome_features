kable_styling(latex_options=c("scale_down", "hold_position"))
library(readr)
filter(full_results, adj.P.Val < 0.05, abs(logFC) >1) %>%
write.csv(file ="./results/filtered_GSE75037.csv")
sessionInfo()
group=as.factor(sampleInfo$group)
##### GLIMMA ########3
#BiocManager::install("Glimma")
library(Glimma)
library(edgeR)
cpm <- cpm(edata)
lcpm <- cpm(edata, log=TRUE)
d <-glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
side.main="Entrez_Gene_ID", counts=edata, groups=group, path = "..", launch=TRUE)
d
library(rmarkdown) # paged table
library(GEOquery) #geo query access
library(knitr) #tables
library(dplyr)
library(devtools)
library(ggplot2)
library(limma)
library(edgeR)
library(ggrepel)
library(kableExtra)
library(tinytex)
Sys.setenv(VROOM_CONNECTION_SIZE = 25600000)
my_id <- "GSE75037"
gse <- getGEO(my_id)
gse <- gse[[1]]
gse
pdata= pData(gse) #sample information, pheno
edata= exprs(gse) #expression data
fdata = fData(gse) #gene annotation, features
dim(fdata)
#Dimension of edata
dim(pdata)
#Dimension of edata
dim(edata)
# Use option useNA to include NA's in table
kable(table(pdata$characteristics_ch1,useNA="ifany"), booktabs=TRUE) %>%
kable_styling(latex_options = "hold_position")
kable(table(pdata[43]), booktabs=T)%>%
kable_styling(latex_options= "hold_position")
kable(table(pdata$characteristics_ch1, pdata$characteristics_ch1.2), booktabs = T)%>%
kable_styling(latex_options = "hold_position")
boxplot(edata,outline=FALSE)
sampleInfo <- pdata
## source_name_ch1 and characteristics_ch1.1 seem to contain factors we might need for the analysis
sampleInfo <- select(sampleInfo, source_name_ch1,characteristics_ch1.2)
#rename to more convenient column names
sampleInfo <- rename(sampleInfo, patient=characteristics_ch1.2, group = source_name_ch1)
library(pheatmap)
corMatrix <- cor(exprs(gse),use="c")
pheatmap(corMatrix)
rownames(sampleInfo) <- colnames(corMatrix)
pheatmap(corMatrix,
annotation_col=sampleInfo)
plotMDS(gse, labels=sampleInfo[,"group"],
gene.selection="common")
#Plot principal components labeled by group
pca <- prcomp(t(edata))
## Join the PCs to the sample information
cbind(sampleInfo, pca$x) %>%
ggplot(aes(x = PC1, y=PC2, col=group,label=paste("Patient", patient))) + geom_point() + geom_text_repel()
design <- model.matrix(~0+sampleInfo$group)
colnames(design) <- c("adenocarcinoma","non_malignant") #rename columns
kable(head(design), booktabs=T)%>%
kable_styling(latex_options = "hold_position")
#calculate median expression level
cutoff <- median(exprs(gse))
#TRUE or FALSE whether each gene is "expressed" in each sample
is_expressed <- exprs(gse) >cutoff
## Identify genes expressed in more than 2 samples
keep <- rowSums(is_expressed) >2
## subset to just those expressed genes
gse <- gse[keep,]
fit <- lmFit(exprs(gse), design)
contrasts <- makeContrasts(adenocarcinoma - non_malignant, levels=design)
fit2 <- contrasts.fit(fit,contrasts)
efit <- eBayes(fit2) #apply empirical Bayes to get the differential expression statistics and p-values
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options = "hold_position")
results <- (decideTests(efit))
kable(summary(results), booktabs=T)
anno <- fData(gse)
anno <- select(anno,Symbol, Entrez_Gene_ID,Chromosome,Cytoband)
efit$genes <- anno
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options= c("scale_down", "hold_position"))
full_results <- topTable(efit, number=Inf)
full_results <- tibble::rownames_to_column(full_results, "ID")
ggplot(full_results, aes(x=logFC, y=B)) +
geom_point()
p_cutoff <- 0.05
fc_cutoff <- 1
topN <- 20
full_results %>%
mutate(Significant = adj.P.Val < p_cutoff, abs(logFC) > fc_cutoff) %>%
mutate(Rank= 1:n(), Label= ifelse(Rank < topN, Symbol, "")) %>%
ggplot(aes(x = logFC, y=B, col=Significant, label= Label)) +
geom_text_repel(col="black")
#visualise
plotSA(efit, main="Final model: Mean-variance trend")
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
tfit <- treat(efit, lfc=1)
dt <- decideTests(tfit)
kable(summary(dt), booktabs=T)%>%
kable_styling(latex_options= "hold_position")
adeno_vs_non <- topTreat(tfit, coef=1, n=Inf)
kable(head(adeno_vs_non), booktabs=T) %>%
kable_styling(latex_options= c("scale_down", "hold_position"))
plotMD(tfit, column=1, status=dt[,1], main=colnames(tfit)[1],
xlim=c(2,16))
kable(filter(full_results, Symbol == "SLC22A1"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, Symbol == "SLC22A4"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, Symbol == "SLC22A5"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, grepl("SLC22", Symbol)), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
group=as.factor(sampleInfo$group)
##### GLIMMA ########3
#BiocManager::install("Glimma")
library(Glimma)
library(edgeR)
cpm <- cpm(edata)
lcpm <- cpm(edata, log=TRUE)
d <-glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
side.main="Entrez_Gene_ID", counts=edata, groups=group, path = "..", launch=TRUE)
library(rmarkdown) # paged table
library(GEOquery) #geo query access
library(knitr) #tables
library(dplyr)
library(devtools)
library(ggplot2)
library(limma)
library(Glimma)
library(edgeR)
library(ggrepel)
Sys.setenv(VROOM_CONNECTION_SIZE = 25600000)
my_id <- "GSE75037"
gse <- getGEO(my_id)
length(gse)
gse <- gse[[1]]
gse
pdata= pData(gse) #sample information
edata= exprs(gse) #expression data
fdata = fData(gse) #gene annotation
paged_table(pdata)
kable(table(pdata[43]))
kable(table(pdata$characteristics_ch1.2, pdata$source_name_ch1))
# Use option useNA to include NA's in table
kable(table(pdata$characteristics_ch1,useNA="ifany"))
# is.na checks for NA values
kable(table(is.na(pdata$characteristics_ch1)))
# Check for other common missing names
sum(pdata$characteristics_ch1==" ")
# Check genomic data for NAs
sum(is.na(edata))
# Make the distribution of NA's by genes
gene_na = rowSums(is.na(edata))
kable(head(gene_na))
dim(fdata)
dim(pdata)
dim(edata)
## exprs get the expression levels as a data frame and get the distribution
kable(summary(exprs(gse)))
boxplot(edata,outline=FALSE)
##Let's pick just those columns that we might need for the analysis
sampleInfo <- select(pdata, 44,"characteristics_ch1.4")
## Optionally, rename to more convenient column names
sampleInfo <- dplyr::rename(sampleInfo, "group" = "histology:ch1", "patient"="characteristics_ch1.4")
paged_table(sampleInfo)
library(pheatmap)
## argument use="c" stops an error if there are any missing data points
corMatrix <- cor(exprs(gse),use="c")
pheatmap(corMatrix)
rownames(sampleInfo)
colnames(corMatrix)
rownames(sampleInfo) <- colnames(corMatrix)
pheatmap(corMatrix,
annotation_col=sampleInfo)
plotMDS(gse, labels=sampleInfo[,"group"],
gene.selection="common")
#Plot principal components labeled by group
pca <- prcomp(t(edata))
## Join the PCs to the sample information
cbind(sampleInfo, pca$x) %>%
ggplot(aes(x = PC1, y=PC2, col=group,label=paste("Patient", patient))) + geom_point() + geom_text_repel()
library(limma)
design <- model.matrix(~0+sampleInfo$group)
kable(head(design))
#rename
colnames(design) <- c("adenocarcinoma","non_malignant")
colSums(design)
contrasts <- makeContrasts(adenocarcinoma - non_malignant, levels=design)
contrasts
fit <- lmFit(exprs(gse), design)
head(fit$coefficients)
fit2 <- contrasts.fit(fit,contrasts = contrasts)
efit <- eBayes(fit2)
anno <- fdata
paged_table(anno)
anno <- select(anno,Symbol, Entrez_Gene_ID,Chromosome,Cytoband)
efit$genes <- anno
topTable(efit)
#visualise
plotSA(efit, main="Final model: Mean-variance trend")
topTable(efit)
results <- (decideTests(efit))
kable(summary(results))
tfit <- treat(efit, lfc=1)
dt <- decideTests(tfit)
summary(dt)
adeno_vs_non <- topTreat(tfit, coef=1, n=Inf)
head(adeno_vs_non)
plotMD(tfit, column=1, status=dt[,1], main=colnames(tfit)[1],
xlim=c(2,16))
group=as.factor(sampleInfo$group)
##### GLIMMA ########3
#BiocManager::install("Glimma")
library(Glimma)
library(edgeR)
cpm <- cpm(edata)
lcpm <- cpm(edata, log=TRUE)
d <-glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
side.main="Entrez_Gene_ID", counts=edata, groups=group, path = "..", launch=TRUE)
d
library(htmlwidgets)
htmlwidgets::saveWidget(d, "glimma-plot.html", selfcontained = T)
library(rmarkdown) # paged table
library(GEOquery) #geo query access
library(knitr) #tables
library(dplyr)
library(devtools)
library(ggplot2)
library(limma)
library(edgeR)
library(ggrepel)
library(kableExtra)
library(tinytex)
Sys.setenv(VROOM_CONNECTION_SIZE = 25600000)
my_id <- "GSE75037"
gse <- getGEO(my_id)
gse <- gse[[1]]
gse
pdata= pData(gse) #sample information, pheno
edata= exprs(gse) #expression data
fdata = fData(gse) #gene annotation, features
dim(fdata)
#Dimension of edata
dim(pdata)
#Dimension of edata
dim(edata)
# Use option useNA to include NA's in table
kable(table(pdata$characteristics_ch1,useNA="ifany"), booktabs=TRUE) %>%
kable_styling(latex_options = "hold_position")
kable(table(pdata[43]), booktabs=T)%>%
kable_styling(latex_options= "hold_position")
kable(table(pdata$characteristics_ch1, pdata$characteristics_ch1.2), booktabs = T)%>%
kable_styling(latex_options = "hold_position")
boxplot(edata,outline=FALSE)
##Let's pick just those columns that we might need for the analysis
sampleInfo <- select(pdata, 44,"characteristics_ch1.4")
## Optionally, rename to more convenient column names
sampleInfo <- dplyr::rename(sampleInfo, "group" = "histology:ch1", "patient"="characteristics_ch1.4")
library(pheatmap)
corMatrix <- cor(exprs(gse),use="c")
pheatmap(corMatrix)
rownames(sampleInfo) <- colnames(corMatrix)
pheatmap(corMatrix,
annotation_col=sampleInfo)
plotMDS(gse, labels=sampleInfo[,"group"],
gene.selection="common")
#Plot principal components labeled by group
pca <- prcomp(t(edata))
## Join the PCs to the sample information
cbind(sampleInfo, pca$x) %>%
ggplot(aes(x = PC1, y=PC2, col=group,label=paste("Patient", patient))) + geom_point() + geom_text_repel()
design <- model.matrix(~0+sampleInfo$group)
colnames(design) <- c("adenocarcinoma","non_malignant") #rename columns
kable(head(design), booktabs=T)%>%
kable_styling(latex_options = "hold_position")
contrasts <- makeContrasts(adenocarcinoma - non_malignant, levels=design)
contrasts
fit <- lmFit(exprs(gse), design)
contrasts <- makeContrasts(adenocarcinoma - non_malignant, levels=design)
fit2 <- contrasts.fit(fit,contrasts)
efit <- eBayes(fit2) #apply empirical Bayes to get the differential expression statistics and p-values
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options = "hold_position")
results <- (decideTests(efit))
kable(summary(results), booktabs=T)
anno <- fData(gse)
anno <- select(anno,Symbol, Entrez_Gene_ID,Chromosome,Cytoband)
efit$genes <- anno
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options= c("scale_down", "hold_position"))
full_results <- topTable(efit, number=Inf)
full_results <- tibble::rownames_to_column(full_results, "ID")
ggplot(full_results, aes(x=logFC, y=B)) +
geom_point()
p_cutoff <- 0.05
fc_cutoff <- 1
topN <- 20
full_results %>%
mutate(Significant = adj.P.Val < p_cutoff, abs(logFC) > fc_cutoff) %>%
mutate(Rank= 1:n(), Label= ifelse(Rank < topN, Symbol, "")) %>%
ggplot(aes(x = logFC, y=B, col=Significant, label= Label)) +
geom_text_repel(col="black")
#visualise
plotSA(efit, main="Final model: Mean-variance trend")
kable(topTable(efit), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
tfit <- treat(efit, lfc=1)
dt <- decideTests(tfit)
kable(summary(dt), booktabs=T)%>%
kable_styling(latex_options= "hold_position")
adeno_vs_non <- topTreat(tfit, coef=1, n=Inf)
kable(head(adeno_vs_non), booktabs=T) %>%
kable_styling(latex_options= c("scale_down", "hold_position"))
plotMD(tfit, column=1, status=dt[,1], main=colnames(tfit)[1],
xlim=c(2,16))
kable(filter(full_results, Symbol == "SLC22A1"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, Symbol == "SLC22A4"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, Symbol == "SLC22A5"), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
kable(filter(full_results, grepl("SLC22", Symbol)), booktabs=T)%>%
kable_styling(latex_options=c("scale_down", "hold_position"))
group=as.factor(sampleInfo$group)
##### GLIMMA ########3
#BiocManager::install("Glimma")
library(Glimma)
library(edgeR)
cpm <- cpm(edata)
lcpm <- cpm(edata, log=TRUE)
d <-glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
side.main="Entrez_Gene_ID", counts=edata, groups=group, path = "..", launch=TRUE)
d
library(readr)
filter(full_results, adj.P.Val < 0.05, abs(logFC) >1) %>%
write.csv(file ="./results/filtered_GSE75037.csv")
sessionInfo()
library(htmlwidgets)
htmlwidgets::saveWidget(d, "GSE75037-plot.html", selfcontained = T)
library(htmlwidgets)
htmlwidgets::saveWidget(d, "gse75-plot.html", selfcontained = T)
saveWidget(d, "gse75-plot.html", selfcontained = T)
d <-glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
side.main="Entrez_Gene_ID", counts=edata, groups=group, path = ".",folder = "glimma-plots", html = "GSE75037-Plot", launch=TRUE)
setwd("~/Documents/Github/visualizing_genome_features")
knitr::opts_chunk$set(echo = TRUE)
library(Gviz)
library(GenomicRanges)
data(cpgIslands)
class(cpgIslands)
chr <- as.character(unique(seqnames(cpgIslands)))
gen <- genome(cpgIslands)
atrack <- AnnotationTrack(cpgIslands, name= "CpG")
sessionInfo()
```{r}
plotTracks(atrack)
gtrack <- GenomeAxisTrack() #to add a genomic axis to the plot
#plot
plotTracks(list(gtrack, atrack))
atrack <- AnnotationTrack(cpgIslands, name= "CpG") #plot cpgislands
itrack <- IdeogramTrack(genome = gen, chromosome = chr) # ideogram
#plot
plotTracks(list(itrack, gtrack, atrack))
ideoTrack <- IdeogramTrack(genome = "hg19", chromosome = "chr6")# ideogram
#plot
plotTracks(ideoTrack, from = 85e6, to = 129e6)
#plot
plotTracks(ideoTrack, from = 85e6, to = 129e6, showId = FALSE,
showBandId = TRUE, cex.bands = 0.5)
#plot
# showbandId - chromosome bands in the ideogram
# turn off the explicit plotting of the chromosome name by setting the showId display parameter to FALSE.
plotTracks(atrack, ideoTrack, from = 85e6, to = 129e6, showId = FALSE,
showBandId = TRUE, cex.bands = 0.5)
#plot
# showbandId - chromosome bands in the ideogram
# turn off the explicit plotting of the chromosome name by setting the showId display parameter to FALSE.
plotTracks(ideoTrack, atracks,from = 85e6, to = 129e6, showId = FALSE,
showBandId = TRUE, cex.bands = 0.5)
#plot
# showbandId - chromosome bands in the ideogram
# turn off the explicit plotting of the chromosome name by setting the showId display parameter to FALSE.
plotTracks(ideoTrack, atrack,from = 85e6, to = 129e6, showId = FALSE,
showBandId = TRUE, cex.bands = 0.5)
knitr::opts_chunk$set(echo = TRUE)
library(CAGEr)
BiocManager::install("CAGEr")
library(CAGEr)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("CAGEr")
library(CAGEr)
install.packages("vegan")
library(CAGEr)
install.packages("CAGEr")
install.packages("vegan")
library(CAGEr)
knitr::opts_chunk$set(echo = TRUE)
library(Gviz)
library(GenomicRanges)
data(cpgIslands)
class(cpgIslands)
chr <- as.character(unique(seqnames(cpgIslands)))
gen <- genome(cpgIslands) #plot the single CpG islands annotation track.
atrack <- AnnotationTrack(cpgIslands, name= "CpG") #plot cpgislands
gtrack <- GenomeAxisTrack() #to add a genomic axis to the plot
ideoTrack <- IdeogramTrack(genome = "hg19", chromosome = "chr6")# ideogram
#plot
# showbandId - chromosome bands in the ideogram
# turn off the explicit plotting of the chromosome name by setting the showId display parameter to FALSE.
plotTracks(ideoTrack, from = 85e6, to = 129e6, showId = FALSE,
showBandId = TRUE, cex.bands = 0.5)
from <- 65921878
to <- 65980988
cpgIslands <- UcscTrack(genome="mm9", chromosome="chrX",
track="cpgIslandExt", from=from, to=to,
trackType="AnnotationTrack", start="chromStart", end="chromEnd",
id="name", shape="box", fill="#006400", name="CpG Islands")
sessionInfo()
cpgIslands <- UcscTrack(genome="hg38", chromosome="chr6",
track="cpgIslandExt", from=from, to=to,
trackType="AnnotationTrack", start="chromStart", end="chromEnd",
id="name", shape="box", fill="#006400", name="CpG Islands")
from <- 160120744
to <- 160128417
cpgIslands <- UcscTrack(genome="hg38", chromosome="chr6",
track="cpgIslandExt", from=from, to=to,
trackType="AnnotationTrack", start="chromStart", end="chromEnd",
id="name", shape="box", fill="#006400", name="CpG Islands")
snpLocations <- UcscTrack(genome="hg38", chromosome="chr6",
track="snp128", from=from, to=to, trackType="AnnotationTrack",
start="chromStart", end="chromEnd", id="name", feature="func",
strand="strand", shape="box", stacking="dense", fill="black",
name="SNPs")
knownGenes <- UcscTrack(genome="hg38", chromosome="chr6",
track="knownGene", from=from, to=to, trackType="GeneRegionTrack",
rstarts="exonStarts", rends="exonEnds", gene="name", symbol="name",
transcript="name", strand="strand", fill="#8282d2", name="UCSC Genes")
refGenes <- UcscTrack(genome="hg38", chromosome="chr6",
track="xenoRefGene", from=from, to=to,
trackType="GeneRegionTrack", rstarts="exonStarts",
rends="exonEnds", gene="name", symbol="name2",
transcript="name", strand="strand", fill="#8282d2",
stacking="dense", name="Other RefSeq")
ensGenes <- UcscTrack(genome="hg38", chromosome="chr6",
track="ensGene", from=from, to=to, trackType="GeneRegionTrack",
rstarts="exonStarts", rends="exonEnds", gene="name",
symbol="name2", transcript="name", strand="strand",
fill="#960000", name="Ensembl Genes")
ensGenes <- UcscTrack(genome="hg38", chromosome="chr6",
track="All GENCODE V25", from=from, to=to, trackType="GeneRegionTrack",
rstarts="exonStarts", rends="exonEnds", gene="name",
symbol="name2", transcript="name", strand="strand",
fill="#960000", name="Ensembl Genes")
snpLocations <- UcscTrack(genome="hg38", chromosome="chr6",
track="All SNPs(144)", from=from, to=to, trackType="AnnotationTrack",
start="chromStart", end="chromEnd", id="name", feature="func",
strand="strand", shape="box", stacking="dense", fill="black",
name="SNPs")
conservation <- UcscTrack(genome="hg38", chromosome="chr6",
track="Conservation", table="phyloP30wayPlacental", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window="auto", col.histogram="darkblue",
fill.histogram="darkblue", ylim=c(-3.7, 4), name="Conservation")
gcContent <- UcscTrack(genome="hg38", chromosome="chr6",
track="GC Percent", table="gc5Base", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window=-1, windowSize=1500, fill.histogram="black",
col.histogram="black", ylim=c(30, 70), name="GC Percent")
axTrack <- GenomeAxisTrack()
idxTrack <- IdeogramTrack(genome="hg38", chromosome="chr6")
plotTracks(list(idxTrack, axTrack, knownGenes, refGenes,
ensGenes, cpgIslands, gcContent, conservation,
snpLocations), from=from, to=to, showTitle=FALSE)
conservation <- UcscTrack(genome="hg38", chromosome="chr6",
track="Conservation", table="phyloP30wayPlacental", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window="auto", col.histogram="darkblue",
fill.histogram="darkblue", ylim=c(-3.7, 4), name="Conservation")
conservation <- UcscTrack(genome="hg38", chromosome="chr6",
track="phastCons100way", table="phyloP30wayPlacental", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window="auto", col.histogram="darkblue",
fill.histogram="darkblue", ylim=c(-3.7, 4), name="Conservation")
conservation <- UcscTrack(genome="hg38", chromosome="chr6",
track="Conservation", table="phastCons100way", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window="auto", col.histogram="darkblue",
fill.histogram="darkblue", ylim=c(-3.7, 4), name="Conservation")
gcContent <- UcscTrack(genome="hg38", chromosome="chr6",
track="GC Percent", table="gc5Base", from=from, to=to,
trackType="DataTrack", start="start", end="end", data="score",
type="hist", window=-1, windowSize=1500, fill.histogram="black",
col.histogram="black", ylim=c(30, 70), name="GC Percent")
axTrack <- GenomeAxisTrack()
idxTrack <- IdeogramTrack(genome="hg38", chromosome="chr6")
plotTracks(list(idxTrack, axTrack, knownGenes, refGenes,
ensGenes, cpgIslands, gcContent, conservation,
snpLocations), from=from, to=to, showTitle=FALSE)
